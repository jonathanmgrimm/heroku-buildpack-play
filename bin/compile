#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# Parse args
BUILD_DIR=$1
CACHE_DIR=$2

BIN_DIR=$(cd $(dirname $0); pwd) # absolute path

# source in common functions
. $BIN_DIR/common.sh

curl --silent --location http://heroku-jvm-common.s3.amazonaws.com/jvm-buildpack-common.tar.gz | tar xz
. bin/java

#create the cache dir if it doesn't exist
mkdir -p $CACHE_DIR

# create default system.properties 
if [ ! -f ${BUILD_DIR}/system.properties ]; then
  echo "java.runtime.version=1.6" > ${BUILD_DIR}/system.properties
fi

# install JDK 
javaVersion=$(detect_java_version ${BUILD_DIR})
echo -n "-----> Installing OpenJDK ${javaVersion}..."
JDK_URL_1_7="http://lang-jvm.s3.amazonaws.com/jdk/openjdk1.7.0_79-cedar14.tar.gz"
export JDK_URL_1_7
install_java ${BUILD_DIR} ${javaVersion}
jdk_overlay ${BUILD_DIR}
echo "done"

PLAY_PATH=".play"
IVY_PATH=".ivy2"

# Change dir to handle relative paths
cd $BUILD_DIR

TOASTWEB_PRECOMPILED_URL=$(head -n 1 toastweb_precompiled_url)
echo -n "-----> Downloading pre-built toastweb from: ${TOASTWEB_PRECOMPILED_URL}..."
$BIN_DIR/s3curl.pl --id=$PRECOMPILED_DOWNLOAD_KEY --key=$PRECOMPILED_DOWNLOAD_SECRET_KEY -- $TOASTWEB_PRECOMPILED_URL | tar xz

PROFILE_PATH="$BUILD_DIR/.profile.d/play.sh"
mkdir -p $(dirname $PROFILE_PATH)
echo 'export PATH="/app/.jdk/bin:$PATH"' >> $PROFILE_PATH

# Remove build time dependencies from slug
# (Note: runtime modules are copied to slug with --forceCopy option)
rm -fr $PLAY_PATH/modules
rm -fr $IVY_PATH

mv play1 .play

# Warn if no Procfile is present
if [ ! -f Procfile ]; then
  echo "-----> No Procfile found. Will use the following default process: "
  echo "       play run --http.port=\$PORT \$PLAY_OPTS"
fi
